//!Markov Module
//!This file contains behaviors and functions critical to text generation

use std::collections::HashMap;

pub struct Markov {
    map: HashMap<String, Vec<String>>
}

impl Markov {
    pub fn new() -> Markov {
        Markov {
            map: HashMap::new()
        }
    }

    pub fn parse(&mut self, sentence: &str) {
    let words = sentence.split(" ").collect::<Vec<&str>>();
    let word_count = words.len();

    for n in 0..word_count {
        if n + 2 < word_count {
            let key = format!("{} {}", words[n], words[n + 1]);
            let value = words[n + 2];

            self.insert(key, value.to_string())
        }
    }
}

}